{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\contact-keeper\\\\client\\\\src\\\\context\\\\auth\\\\AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport { REGISTER_FAIL, USER_LOADED, REGISTER_SUCCESS, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Actions\n  // REgister\n\n  const register = async FormData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', FormData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["D:/js/contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","REGISTER_FAIL","USER_LOADED","REGISTER_SUCCESS","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","register","FormData","config","headers","res","post","type","payload","data","err","response","msg","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,gBAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,YARF,QASO,UATP;;AAWA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,IAAI,EAAE,IAJa;AAKnBC,IAAAA,KAAK,EAAE;AALY,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACG,WAAD,EAAcW,YAAd,CAApC,CAR2B,CAS3B;AACA;;AACA,QAAMU,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACnC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CAAW,YAAX,EAAyBJ,QAAzB,EAAmCC,MAAnC,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAExB,gBADC;AAEPyB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CAAR;AAID,KAND,CAME,OAAOC,GAAP,EAAY;AACZV,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE1B,aADC;AAEP2B,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG;AAFpB,OAAD,CAAR;AAID;AACF,GAlBD;;AAoBA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLpB,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAELG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFlB;AAGLC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHV;AAILC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAJP;AAKLC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KALR;AAMLG,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGX,KAAK,CAACuB,QAVT,CADF;AAcD,CA7CD;;AA8CA,eAAexB,SAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport AuthContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport {\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  REGISTER_SUCCESS,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n} from '../types';\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n    error: null,\r\n  };\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n  // Actions\r\n  // REgister\r\n  const register = async (FormData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/users', FormData, config);\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n        payload: err.response.data.msg,\r\n      });\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        error: state.error,\r\n        register,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}