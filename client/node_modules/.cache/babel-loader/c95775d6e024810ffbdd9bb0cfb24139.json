{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\contact-keeper\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\";\nimport React, { useContext, Fragment, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem';\nimport '../../components/layout/Snipper';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filterd,\n    getContacts,\n    loading\n  } = contactContext;\n  useEffect(() => {\n    getContacts(); // eslint-disable-next-line\n  }, []);\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }\n    }, \"Please Add Contact\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, contacts !== null && !loading ? /*#__PURE__*/React.createElement(TransitionGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, filterd !== null ? filterd.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }\n  }))) : contacts.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }\n  })))) : /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["D:/js/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","useContext","Fragment","useEffect","CSSTransition","TransitionGroup","ContactItem","ContactContext","Contacts","contactContext","contacts","filterd","getContacts","loading","length","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAe,iCAAf;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,cAAc,GAAGR,UAAU,CAACM,cAAD,CAAjC;AACA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,WAArB;AAAkCC,IAAAA;AAAlC,MAA8CJ,cAApD;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,WAAW,GADG,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAIA,MAAIF,QAAQ,CAACI,MAAT,KAAoB,CAAxB,EAA2B;AACzB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;;AACD,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,KAAK,IAAb,IAAqB,CAACG,OAAtB,gBACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,KAAK,IAAZ,GACGA,OAAO,CAACI,GAAR,CAAaC,OAAD,iBACV,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,OAAO,CAACC,GADf;AAEE,IAAA,OAAO,EAAE,GAFX;AAGE,IAAA,UAAU,EAAC,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADH,GAUGN,QAAQ,CAACK,GAAT,CAAcC,OAAD,iBACX,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,OAAO,CAACC,GADf;AAEE,IAAA,OAAO,EAAE,GAFX;AAGE,IAAA,UAAU,EAAC,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CAXN,CADD,gBAuBC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,CADF;AA6BD,CAvCD;;AAwCA,eAAeR,QAAf","sourcesContent":["import React, { useContext, Fragment, useEffect } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport ContactItem from './ContactItem';\r\nimport {} from '../../components/layout/Snipper'\r\nimport ContactContext from '../../context/contact/contactContext';\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { contacts, filterd, getContacts, loading } = contactContext;\r\n  useEffect(() => {\r\n    getContacts();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  if (contacts.length === 0) {\r\n    return <h4>Please Add Contact</h4>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {contacts !== null && !loading ? (\r\n        <TransitionGroup>\r\n          {filterd !== null\r\n            ? filterd.map((contact) => (\r\n                <CSSTransition\r\n                  key={contact._id}\r\n                  timeout={500}\r\n                  classNames='item'\r\n                >\r\n                  <ContactItem contact={contact} />\r\n                </CSSTransition>\r\n              ))\r\n            : contacts.map((contact) => (\r\n                <CSSTransition\r\n                  key={contact._id}\r\n                  timeout={500}\r\n                  classNames='item'\r\n                >\r\n                  <ContactItem contact={contact} />\r\n                </CSSTransition>\r\n              ))}\r\n        </TransitionGroup>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}