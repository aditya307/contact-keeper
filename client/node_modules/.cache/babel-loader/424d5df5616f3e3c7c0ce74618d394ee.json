{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\contact-keeper\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\";\nimport React, { useContext, Fragment } from 'react';\nimport ContactItem from './ContactItem';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filterd\n  } = contactContext;\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 12\n      }\n    }, \"Please Add Contact\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, filterd !== null ? filterd.map(contact => /*#__PURE__*/React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 50\n    }\n  })) : contacts.map(contact => /*#__PURE__*/React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["D:/js/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","useContext","Fragment","ContactItem","ContactContext","Contacts","contactContext","contacts","filterd","length","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,cAAc,GAAGL,UAAU,CAACG,cAAD,CAAjC;AACA,QAAM;AAAEG,IAAAA,QAAF;AAAWC,IAAAA;AAAX,MAAuBF,cAA7B;;AACA,MAAGC,QAAQ,CAACE,MAAT,KAAmB,CAAtB,EAAyB;AACvB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;;AACD,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,KAAI,IAAX,GAAkBA,OAAO,CAACE,GAAR,CAAYC,OAAO,iBAAK,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAIA,OAAO,CAACC,EAA5B;AAAgC,IAAA,OAAO,EAAID,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAAlB,GAAqGJ,QAAQ,CAACG,GAAT,CAAcC,OAAD,iBACjH,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADoG,CADxG,CADF;AAOD,CAbD;;AAcA,eAAeN,QAAf","sourcesContent":["import React, { useContext, Fragment } from 'react';\r\nimport ContactItem from './ContactItem';\r\nimport ContactContext from '../../context/contact/contactContext';\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { contacts,filterd } = contactContext;\r\n  if(contacts.length ===0) {\r\n    return <h4>Please Add Contact</h4>\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {filterd !==null ? filterd.map(contact => (<ContactItem key = {contact.id} contact = {contact} />)) : contacts.map((contact) => (\r\n        <ContactItem key={contact.id} contact={contact} />\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Contacts;"]},"metadata":{},"sourceType":"module"}