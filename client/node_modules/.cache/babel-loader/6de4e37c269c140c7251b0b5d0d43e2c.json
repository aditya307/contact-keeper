{"ast":null,"code":"import React,{useContext,Fragment,useEffect}from'react';import{CSSTransition,TransitionGroup}from'react-transition-group';import ContactItem from'./ContactItem';import Spinner from'../../components/layout/Snipper';import ContactContext from'../../context/contact/contactContext';var Contacts=function Contacts(){var contactContext=useContext(ContactContext);var contacts=contactContext.contacts,filterd=contactContext.filterd,getContacts=contactContext.getContacts,loading=contactContext.loading;useEffect(function(){getContacts();// eslint-disable-next-line\n},[]);if(contacts!==null&&contacts.length===0&&!loading){return/*#__PURE__*/React.createElement(\"h4\",null,\"Please Add Contact\");}return/*#__PURE__*/React.createElement(Fragment,null,contacts!==null&&!loading?/*#__PURE__*/React.createElement(TransitionGroup,null,filterd!==null?filterd.map(function(contact){return/*#__PURE__*/React.createElement(CSSTransition,{key:contact._id,timeout:500,classNames:\"item\"},/*#__PURE__*/React.createElement(ContactItem,{contact:contact}));}):contacts.map(function(contact){return/*#__PURE__*/React.createElement(CSSTransition,{key:contact._id,timeout:500,classNames:\"item\"},/*#__PURE__*/React.createElement(ContactItem,{contact:contact}));})):/*#__PURE__*/React.createElement(Spinner,null));};export default Contacts;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","useContext","Fragment","useEffect","CSSTransition","TransitionGroup","ContactItem","Spinner","ContactContext","Contacts","contactContext","contacts","filterd","getContacts","loading","length","map","contact","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iCAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAMC,CAAAA,cAAc,CAAGT,UAAU,CAACO,cAAD,CAAjC,CADqB,GAEbG,CAAAA,QAFa,CAE+BD,cAF/B,CAEbC,QAFa,CAEHC,OAFG,CAE+BF,cAF/B,CAEHE,OAFG,CAEMC,WAFN,CAE+BH,cAF/B,CAEMG,WAFN,CAEmBC,OAFnB,CAE+BJ,cAF/B,CAEmBI,OAFnB,CAGrBX,SAAS,CAAC,UAAM,CACdU,WAAW,GACX;AACD,CAHQ,CAGN,EAHM,CAAT,CAIA,GAAIF,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACI,MAAT,GAAoB,CAAzC,EAA8C,CAACD,OAAnD,CAA4D,CAC1D,mBAAO,mDAAP,CACD,CACD,mBACE,oBAAC,QAAD,MACGH,QAAQ,GAAK,IAAb,EAAqB,CAACG,OAAtB,cACC,oBAAC,eAAD,MACGF,OAAO,GAAK,IAAZ,CACGA,OAAO,CAACI,GAAR,CAAY,SAACC,OAAD,qBACV,oBAAC,aAAD,EACE,GAAG,CAAEA,OAAO,CAACC,GADf,CAEE,OAAO,CAAE,GAFX,CAGE,UAAU,CAAC,MAHb,eAKE,oBAAC,WAAD,EAAa,OAAO,CAAED,OAAtB,EALF,CADU,EAAZ,CADH,CAUGN,QAAQ,CAACK,GAAT,CAAa,SAACC,OAAD,qBACX,oBAAC,aAAD,EACE,GAAG,CAAEA,OAAO,CAACC,GADf,CAEE,OAAO,CAAE,GAFX,CAGE,UAAU,CAAC,MAHb,eAKE,oBAAC,WAAD,EAAa,OAAO,CAAED,OAAtB,EALF,CADW,EAAb,CAXN,CADD,cAuBC,oBAAC,OAAD,MAxBJ,CADF,CA6BD,CAvCD,CAwCA,cAAeR,CAAAA,QAAf","sourcesContent":["import React, { useContext, Fragment, useEffect } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport ContactItem from './ContactItem';\r\nimport Spinner from '../../components/layout/Snipper';\r\nimport ContactContext from '../../context/contact/contactContext';\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { contacts, filterd, getContacts, loading } = contactContext;\r\n  useEffect(() => {\r\n    getContacts();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  if (contacts !== null && contacts.length === 0 && !loading) {\r\n    return <h4>Please Add Contact</h4>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {contacts !== null && !loading ? (\r\n        <TransitionGroup>\r\n          {filterd !== null\r\n            ? filterd.map((contact) => (\r\n                <CSSTransition\r\n                  key={contact._id}\r\n                  timeout={500}\r\n                  classNames='item'\r\n                >\r\n                  <ContactItem contact={contact} />\r\n                </CSSTransition>\r\n              ))\r\n            : contacts.map((contact) => (\r\n                <CSSTransition\r\n                  key={contact._id}\r\n                  timeout={500}\r\n                  classNames='item'\r\n                >\r\n                  <ContactItem contact={contact} />\r\n                </CSSTransition>\r\n              ))}\r\n        </TransitionGroup>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}