{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\contact-keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, GET_CONTACTS, CLEAR_CONTACTS } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filterd: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Get Contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts'); // console.log(res.data.data);\n\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data.data\n      });\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: CONTACT_ERROR // payload: err.response.msg,\n\n      });\n    }\n  }; // Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config); // console.log(res.data.data);\n\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data.data\n      });\n    } catch (err) {\n      // console.log(err);\n      dispatch({\n        type: CONTACT_ERROR // payload: err.response.msg,\n\n      });\n    }\n  }; // Update Contact\n\n\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(`/api/contacts`, contacts, config);\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data.data\n      });\n    } catch (err) {}\n  }; // DELTE Contact\n\n\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // SET CURRENT\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Filter Contact\n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // clearfilter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filterd: state.filterd,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter,\n      getContacts,\n      clearContacts\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["D:/js/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuid","axios","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACTS","CLEAR_CONTACTS","ContactState","props","initialState","contacts","current","filterd","error","state","dispatch","getContacts","res","get","type","payload","data","err","console","log","addContact","contact","config","headers","post","updateContact","put","deleteContact","id","delete","response","msg","setCurrent","clearCurrent","filterContact","text","clearFilter","clearContacts","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport axios from 'axios';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\n\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  GET_CONTACTS,\r\n  CLEAR_CONTACTS,\r\n} from '../types';\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: null,\r\n    current: null,\r\n    filterd: null,\r\n    error: null,\r\n  };\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  // Get Contacts\r\n  const getContacts = async () => {\r\n    try {\r\n      const res = await axios.get('/api/contacts');\r\n      // console.log(res.data.data);\r\n      dispatch({\r\n        type: GET_CONTACTS,\r\n        payload: res.data.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        // payload: err.response.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Add Contact\r\n  const addContact = async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/contacts', contact, config);\r\n      // console.log(res.data.data);\r\n      dispatch({ type: ADD_CONTACT, payload: res.data.data });\r\n    } catch (err) {\r\n      // console.log(err);\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        // payload: err.response.msg,\r\n      });\r\n    }\r\n  };\r\n  // Update Contact\r\n  const updateContact = async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.put(`/api/contacts`, contacts, config);\r\n      dispatch({ type: UPDATE_CONTACT, payload: res.data.data });\r\n    } catch (err) {}\r\n  };\r\n  // DELTE Contact\r\n  const deleteContact = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/contacts/${id}`);\r\n      dispatch({ type: DELETE_CONTACT, payload: id });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        payload: err.response.msg,\r\n      });\r\n    }\r\n  };\r\n  // SET CURRENT\r\n  const setCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n  // Clear Current\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n  // Filter Contact\r\n  const filterContact = (text) => {\r\n    dispatch({ type: FILTER_CONTACTS, payload: text });\r\n  };\r\n  // clearfilter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n  const clearContacts = () => {\r\n    dispatch({ type: CLEAR_CONTACTS });\r\n  };\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filterd: state.filterd,\r\n        error: state.error,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContact,\r\n        clearFilter,\r\n        getContacts,\r\n        clearContacts,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}