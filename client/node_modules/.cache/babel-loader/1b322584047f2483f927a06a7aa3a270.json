{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\contact-keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, GET_CONTACTS, CLEAR_CONTACTS } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filterd: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Get Contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch;\n    } catch (err) {}\n  }; // Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      console.log(res.data);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err.response);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // DELTE Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // SET CURRENT\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contact\n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // clearfilter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filterd: state.filterd,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["D:/js/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuid","axios","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACTS","CLEAR_CONTACTS","ContactState","props","initialState","contacts","current","filterd","error","state","dispatch","getContacts","res","get","err","addContact","contact","config","headers","post","console","log","data","type","payload","response","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport axios from 'axios';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\n\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  GET_CONTACTS,\r\n  CLEAR_CONTACTS\r\n} from '../types';\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: [],\r\n    current: null,\r\n    filterd: null,\r\n    error: null,\r\n  };\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  // Get Contacts\r\n  const getContacts = async () => {\r\n    try {\r\n      const res = await axios.get('/api/contacts');\r\n      dispatch\r\n    } catch (err) {\r\n      \r\n    }\r\n  }\r\n\r\n  // Add Contact\r\n  const addContact = async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/contacts', contact, config);\r\n      console.log(res.data);\r\n      dispatch({ type: ADD_CONTACT, payload: res.data });\r\n    } catch (err) {\r\n      console.log(err.response);\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        payload: err.response.msg,\r\n      });\r\n    }\r\n  };\r\n  // DELTE Contact\r\n  const deleteContact = (id) => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  };\r\n  // SET CURRENT\r\n  const setCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n  // Clear Current\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n  // Update Contact\r\n  const updateContact = (contact) => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n  };\r\n  // Filter Contact\r\n  const filterContact = (text) => {\r\n    dispatch({ type: FILTER_CONTACTS, payload: text });\r\n  };\r\n  // clearfilter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filterd: state.filterd,\r\n        error: state.error,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContact,\r\n        clearFilter,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}