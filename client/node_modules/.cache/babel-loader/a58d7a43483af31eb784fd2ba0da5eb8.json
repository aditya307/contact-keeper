{"ast":null,"code":"export default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts.filter(contact => contact.id !== action.payload)]\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filterd: state.contacts.filter(contact => {\n          const regez = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regez) || contact.email.match(regez);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filterd: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/js/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["state","action","type","ADD_CONTACT","contacts","payload","DELETE_CONTACT","filter","contact","id","SET_CURRENT","current","CLEAR_CURRENT","UPDATE_CONTACT","map","FILTER_CONTACTS","filterd","regez","RegExp","name","match","email","CLEAR_FILTER"],"mappings":"AAEA,gBAAe,CAACA,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,WAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,QAAQ,EAAE,CAAC,GAAGJ,KAAK,CAACI,QAAV,EAAoBH,MAAM,CAACI,OAA3B;AAFL,OAAP;;AAIF,SAAKC,cAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELI,QAAAA,QAAQ,EAAE,CACR,GAAGJ,KAAK,CAACI,QAAN,CAAeG,MAAf,CAAuBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAzD,CADK;AAFL,OAAP;;AAMF,SAAKK,WAAL;AACE,aAAO,EACL,GAAGV,KADE;AAELW,QAAAA,OAAO,EAAEV,MAAM,CAACI;AAFX,OAAP;;AAIF,SAAKO,aAAL;AACE,aAAO,EACL,GAAGZ,KADE;AAELW,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKE,cAAL;AACE,aAAO,EACL,GAAGb,KADE;AAELI,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeU,GAAf,CAAoBN,OAAD,IAC3BA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAA9B,GAAmCR,MAAM,CAACI,OAA1C,GAAoDG,OAD5C;AAFL,OAAP;;AAMF,SAAKO,eAAL;AACE,aAAO,EACL,GAAGf,KADE;AAELgB,QAAAA,OAAO,EAAEhB,KAAK,CAACI,QAAN,CAAeG,MAAf,CAAuBC,OAAD,IAAa;AAC1C,gBAAMS,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEjB,MAAM,CAACI,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOG,OAAO,CAACW,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BT,OAAO,CAACa,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHQ;AAFJ,OAAP;;AAOF,SAAKK,YAAL;AACE,aAAO,EACL,GAAGtB,KADE;AAELgB,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF;AACE,aAAOhB,KAAP;AA5CJ;AA8CD,CA/CD","sourcesContent":["\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [\r\n          ...state.contacts.filter((contact) => contact.id !== action.payload),\r\n        ],\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id ? action.payload : contact\r\n        ),\r\n      };\r\n    case FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        filterd: state.contacts.filter((contact) => {\r\n          const regez = new RegExp(`${action.payload}`, 'gi');\r\n          return contact.name.match(regez) || contact.email.match(regez);\r\n        }),\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filterd: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}