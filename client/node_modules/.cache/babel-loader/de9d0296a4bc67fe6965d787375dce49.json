{"ast":null,"code":"import _defineProperty from\"D:\\\\js\\\\contact-keeper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\js\\\\contact-keeper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:\\\\js\\\\contact-keeper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';var ContactForm=function ContactForm(){var contactContext=useContext(ContactContext);var addContact=contactContext.addContact,current=contactContext.current,clearCurrent=contactContext.clearCurrent,updateContact=contactContext.updateContact;useEffect(function(){if(current!==null){setContact(current);}else{setContact({name:'',email:'',phone:'',type:'personal'});}},[contactContext,current]);var _useState=useState({name:'',email:'',phone:'',type:'personal'}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var onChange=function onChange(e){return setContact(_objectSpread(_objectSpread({},contact),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(current===null){addContact(contact);}else{updateContact(contact);}clearAll();};var clearAll=function clearAll(){clearCurrent();};return/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary\"},current?'Edit Contact':'Add Contact'),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",placeholder:\"Email\",name:\"email\",value:email,onChange:onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Phone\",name:\"phone\",value:phone,onChange:onChange}),/*#__PURE__*/React.createElement(\"h5\",null,\"Contact Type\"),/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"personal\",checked:type==='personal',onChange:onChange}),' ',\"Personal\",' ',/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"professional\",checked:type==='professional',onChange:onChange}),' ',\"Professional\",' ',/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:current?'Update Contact':'Add Contact',className:\"btn btn-primary btn-block\"})),current&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-light btn-block\",onClick:clearAll},\"Clear\")));};export default ContactForm;","map":{"version":3,"sources":["D:/js/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","clearCurrent","updateContact","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport ContactContext from '../../context/contact/contactContext';\r\nconst ContactForm = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { addContact, current, clearCurrent, updateContact } = contactContext;\r\n\r\n  useEffect(() => {\r\n    if (current !== null) {\r\n      setContact(current);\r\n    } else {\r\n      setContact({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        type: 'personal',\r\n      });\r\n    }\r\n  }, [contactContext, current]);\r\n  const [contact, setContact] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    type: 'personal',\r\n  });\r\n  const { name, email, phone, type } = contact;\r\n\r\n  const onChange = (e) =>\r\n    setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (current === null) {\r\n      addContact(contact);\r\n    } else {\r\n      updateContact(contact);\r\n    }\r\n    clearAll();\r\n  };\r\n  const clearAll = () => {\r\n    clearCurrent();\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h2 className='text-primary'>\r\n        {current ? 'Edit Contact' : 'Add Contact'}\r\n      </h2>\r\n      <input\r\n        type='text'\r\n        placeholder='Name'\r\n        name='name'\r\n        value={name}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type='email'\r\n        placeholder='Email'\r\n        name='email'\r\n        value={email}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type='text'\r\n        placeholder='Phone'\r\n        name='phone'\r\n        value={phone}\r\n        onChange={onChange}\r\n      />\r\n      <h5>Contact Type</h5>\r\n      <input\r\n        type='radio'\r\n        name='type'\r\n        value='personal'\r\n        checked={type === 'personal'}\r\n        onChange={onChange}\r\n      />{' '}\r\n      Personal{' '}\r\n      <input\r\n        type='radio'\r\n        name='type'\r\n        value='professional'\r\n        checked={type === 'professional'}\r\n        onChange={onChange}\r\n      />{' '}\r\n      Professional{' '}\r\n      <div>\r\n        <input\r\n          type='submit'\r\n          value={current ? 'Update Contact' : 'Add Contact'}\r\n          className='btn btn-primary btn-block'\r\n        />\r\n      </div>\r\n      {current && (\r\n        <div>\r\n          <button className='btn btn-light btn-block' onClick={clearAll}>\r\n            Clear\r\n          </button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}