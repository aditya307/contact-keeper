{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts.filter(contact => contact.id !== action.payload)]\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filterd: state.contacts.filter(contact => {\n          const regez = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regez) || contact.email.match(regez);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filterd: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        err\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/js/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","state","action","type","contacts","payload","filter","contact","id","current","map","filterd","regez","RegExp","name","match","email","err"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,EAQEC,aARF,QASO,UATP;AAWA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFL,OAAP;;AAIF,SAAKX,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,QAAQ,EAAE,CACR,GAAGH,KAAK,CAACG,QAAN,CAAeE,MAAf,CAAuBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAzD,CADK;AAFL,OAAP;;AAMF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELQ,QAAAA,OAAO,EAAEP,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAKT,aAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELQ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKZ,cAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAoBH,OAAD,IAC3BA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAP,CAAeG,EAA9B,GAAmCN,MAAM,CAACG,OAA1C,GAAoDE,OAD5C;AAFL,OAAP;;AAMF,SAAKT,eAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELU,QAAAA,OAAO,EAAEV,KAAK,CAACG,QAAN,CAAeE,MAAf,CAAuBC,OAAD,IAAa;AAC1C,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEX,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOE,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHQ;AAFJ,OAAP;;AAOF,SAAKb,YAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELU,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIA,SAAKX,aAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELgB,QAAAA;AAFK,OAAP;;AAIJ;AACE,aAAOhB,KAAP;AAjDJ;AAmDD,CApDD","sourcesContent":["import {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [\r\n          ...state.contacts.filter((contact) => contact.id !== action.payload),\r\n        ],\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id ? action.payload : contact\r\n        ),\r\n      };\r\n    case FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        filterd: state.contacts.filter((contact) => {\r\n          const regez = new RegExp(`${action.payload}`, 'gi');\r\n          return contact.name.match(regez) || contact.email.match(regez);\r\n        }),\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filterd: null,\r\n      };\r\n      case CONTACT_ERROR:\r\n        return {\r\n          ...state,\r\n          err\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}